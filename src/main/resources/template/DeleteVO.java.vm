package ${package}.modules.${module}.vo;
import ${package}.common.baseenum.BaseEnum.ReturnMsgEnum;
import ${package}.modules.${module}.entity.${className}Entity;
import java.io.Serializable;
import java.util.ArrayList;
import ${package}.common.utils.BeanCopierUtils;
import ${package}.common.utils.DateUtils;

import com.fasterxml.jackson.annotation.JsonFormat;

import java.util.List;
import java.sql.Timestamp;
import java.util.Date;
import java.math.BigDecimal;
import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.annotations.ApiParam;

import java.math.BigDecimal;
/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@ApiModel("删除${comments}参数")
public class ${className}DeleteVO {

#foreach ($column in $columns)
#if (!${column.characterMaximumLength})
#else
	${column.characterMaximumLength}
#end
#if (!${column.numericPrecision})
#else
	${column.numericPrecision}
#end
#if ($column.attrType=="Date"||$column.attrType=="Timestamp")
	@ApiModelProperty(value="$column.comments 格式yyyy-MM-dd HH:mm:ss",example="填写例子")
	@ApiParam(value="$column.comments 格式yyyy-MM-dd HH:mm:ss",defaultValue = "填写例子")  
#else
	@ApiModelProperty(value="$column.comments",example="填写例子")
	@ApiParam(value="$column.comments",defaultValue="填写例子")
#end
	private $column.attrType $column.attrname;
	
#end

#foreach ($column in $columns)

	/**
	 * 设置：${column.comments}
	 */
	public void set${column.attrName}($column.attrType $column.attrname) {
		this.$column.attrname = $column.attrname;
	}
	
	/**
	 * 获取：${column.comments}
	 */
	public $column.attrType get${column.attrName}() {
		return $column.attrname;
	}
#end
	@Override
	public String toString(){
		StringBuilder builder = new StringBuilder();
		builder.append("${package}.modules.${module}.vo.${className}DeleteVO ={")
#foreach ($column in $columns)
#if($velocityCount==1)
#if ($column.attrType=="Date"||$column.attrType=="Timestamp")
		.append("$column.attrname=").append(DateUtils.format($column.attrname, DateUtils.DATE_TIME_PATTERN))
#else
		.append("$column.attrname=").append($column.attrname)
#end
#else
#if ($column.attrType=="Date"||$column.attrType=="Timestamp")
		.append(",$column.attrname=").append(DateUtils.format($column.attrname, DateUtils.DATE_TIME_PATTERN))
#else
		.append(",$column.attrname=").append($column.attrname)
#end
#end 
#end
		.append("}");
		return builder.toString();
	}
	
	public static enum ${className}Enum{
#foreach($column in $columns)
#if (!$velocityHasNext)
		${column.columnName}("${column.attrname}","${column.comments}");
#else
		${column.columnName}("${column.attrname}","${column.comments}"),
#end
#end
		private String fieldName;
		private String remark;
		${className}Enum(String fieldName,String remark){
			this.fieldName = fieldName;
			this.remark = remark;
		}
		
		public String get(){
			return this.fieldName;
		}
		
		public String getRemark(){
			return this.remark;
		}
	}
	
	@ApiModel("修改${comments}信息,返回执行结果")
	public static class ${className}DResultVO {

		private static ${className}DResultVO success = new ${className}DResultVO(ReturnMsgEnum.SUCCESS.getCode(),ReturnMsgEnum.SUCCESS.getMsg());
		private static ${className}DResultVO fail = new ${className}DResultVO(ReturnMsgEnum.FAIL.getCode(),ReturnMsgEnum.FAIL.getMsg());
		@ApiModelProperty(value="状态码",allowableValues="200:成功,其他表示失败")
		private String code;
		@ApiModelProperty(value="返回修改结果信息")
		private String msg;
		
		public ${className}DResultVO(String code,String msg){
			this.code = code;
			this.msg = msg;
		}
		
		@Override
		public String toString(){
			StringBuilder builder = new StringBuilder();
			builder.append("${package}.modules.${module}.vo.${className}DResultVO =")
			.append("code=").append(code)
			.append(",msg=").append(msg)
			.append("}");
			return builder.toString();
		}
		
		public ${className}DResultVO(){
		}
		
		public String getCode() {
			return code;
		}
	
		public void setCode(String code) {
			this.code = code;
		}
		public static ${className}DResultVO ok() {
			return success;
		}
	
		public static ${className}DResultVO  fail() {
			return fail;
		}
		
		public String getMsg() {
			return msg;
		}
	
		public void setMsg(String msg) {
			this.msg = msg;
		}
	}
}
